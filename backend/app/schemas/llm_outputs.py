"""Pydantic models describing structured outputs generated by the RAG LLM pipeline."""
from __future__ import annotations

from typing import List, Optional, Union
from pydantic import BaseModel


class ReviewSummary(BaseModel):
    """Optional summary of a single review that influences the LLM output."""

    content: str
    rating: Optional[int] = None
    verified_purchase: Optional[bool] = None
    user_id: Optional[str] = None


class ReviewHighlightItem(BaseModel):
    """Structured representation of a positive or negative review highlight."""

    summary: str
    explanation: Optional[str] = None
    quote: Optional[str] = None


class ReviewHighlights(BaseModel):
    overall_sentiment: str
    positive: List[ReviewHighlightItem]
    negative: List[ReviewHighlightItem]


class SellingPoint(BaseModel):
    title: Optional[str] = None
    description: str


MainSellingPoint = Union[SellingPoint, str]


class ProductAnalysis(BaseModel):
    asin: str
    main_selling_points: List[MainSellingPoint]
    best_for: str
    review_highlights: ReviewHighlights
    confidence: Optional[float] = None
    warnings: Optional[List[str]] = None
    notes: Optional[str] = None


class BatchProductAnalysis(BaseModel):
    results: List[ProductAnalysis]


__all__ = [
    "ReviewSummary",
    "ReviewHighlightItem",
    "ReviewHighlights",
    "SellingPoint",
    "MainSellingPoint",
    "ProductAnalysis",
    "BatchProductAnalysis",
]
